Question:
Table: Insurance
+-------------+-------+
| Column Name | Type  |
+-------------+-------+
| pid         | int   |
| tiv_2015    | float |
| tiv_2016    | float |
| lat         | float |
| lon         | float |
+-------------+-------+
pid is the primary key column for this table.
Each row of this table contains information about one policy where:
pid is the policyholder's policy ID.
tiv_2015 is the total investment value in 2015 and tiv_2016 is the total investment value in 2016.
lat is the latitude of the policy holder's city. It's guaranteed that lat is not NULL.
lon is the longitude of the policy holder's city. It's guaranteed that lon is not NULL.
 
 
Write an SQL query to report the sum of all total investment values in 2016 tiv_2016, for all policyholders who:
have the same tiv_2015 value as one or more other policyholders, and
are not located in the same city like any other policyholder (i.e., the (lat, lon) attribute pairs must be unique).
Round tiv_2016 to two decimal places.
The query result format is in the following example.
 
Example 1:
Input: 
Insurance table:
+-----+----------+----------+-----+-----+
| policy_id | total_investment_2015 | total_investment_2016 | latitude | longitude |
+-----+----------+----------+-----+-----+
| 1         | 10                     | 5                     | 10       | 10  |
| 2         | 20                     | 20                    | 20       | 20  |
| 3         | 10                     | 30                    | 20       | 20  |
| 4         | 10                     | 40                    | 40       | 40  |

Answer:

--policy holder with duplicate tiv_2015
SELECT tiv_2015
INTO Duplicate_2015_PolicyHolder
FROM Insurance
GROUP BY tiv_2015
HAVING COUNT(*) > 1

 --policy holder with same location
SELECT lat, lon
INTO Same_Location_Policy_Holder
FROM Insurance
GROUP BY lat, lon
HAVING COUNT(*) > 1


SELECT 
    CAST(SUM(tiv_2016) AS decimal(16,2)) AS tiv_2016
FROM (
    SELECT 
        p1.pid,same_loc.lat,
        p1.tiv_2016 AS tiv_2016
    FROM Insurance p1
    JOIN Duplicate_2015_PolicyHolder dup
       ON p1.tiv_2015 = dup.tiv_2015
    LEFT JOIN Same_Location_Policy_Holder same_loc 
	ON p1.lat = same_loc.lat AND p1.lon = same_loc.lon
    WHERE same_loc.lat IS NULL -- Exclude same location
) Final_Output;


+-----+----------+----------+-----+-----+
Output: 
+----------+
| tiv_2016 |
+----------+
| 45.00    |
